@startuml
'https://plantuml.com/sequence-diagram

title User auth with login and password

autonumber

actor User
participant Auth as "Authorization service"
collections Pwd as "Password SB"
participant App as "Service"

==User Password Generation==

User -> User : generate key pair (<b>Pub</b>, <b>Priv</b>) \n\
<b>Address</b>
note right
    Here and later <b>Address</b>
    is used like password substitution
end note

User -> User : evaluate <b>Secret</b> as\n\
H(<b>Password</b>) xor <b>Priv</b>

User -> Pwd : create SC: <b>Pub</b>, <b>Secret</b>
User --> User : Optional: \n\
link <b>Address</b> to DNS as <b>DN</b>
note right
    In that case <b>DN</b> encapsulates
    both username and password <b>Address</b>
end note

==Registration Page==

User -> Auth : registraton page sends: \n\
<b>Username</b> (or <b>DN</b>)

Auth -> Auth : store <b>Username</b>, <b>nonce</b>
Auth -> User : <b>nonce</b>

User -> Pwd : get SC data: <b>Secret</b>
User -> User : <b>Secret</b> xor H(password) = <b>Priv</b>
User -> Auth : <b>Username</b>, <b>Address</b>, \n\
<b>nonce</b>, sign(<b>nonce</b>)

Auth -> Pwd : get SC data: <b>Pub</b>

Auth -> Auth : verify sign(<b>nonce</b>)
Auth -> Auth : store <b>Username</b>, \n\
<b>Address</b>, <b>UserId</b> as <b>User</b>
Auth -> User : <b>User</b>, AuthSign(<b>User</b>) as <b>WT</b>

User -> Pwd : store encrypted (<b>WT</b>)
note right
    Encrypt with another
    "xored" key in SB
end note

==Using WT==

User -> Pwd : load encrypted (<b>WT</b>), cypher key pair
User -> User : decrypt <b>WT</b>
User -> App : make request with <b>WT</b>

App -> App : verify <b>WT</b>
App -> User : OK / redirect Auth page

==Update WT==

User -> Auth : login with <b>Username</b>

Auth -> Auth : get <b>Address</b>
Auth -> Pwd : get <b>Pub</b>, <b>Secret</b>
Auth -> Auth : store <b>Username</b>, \n\
<b>Pub</b>, <b>nonce</b>
Auth -> User : <b>Secret</b>, <b>nonce</b>

User -> User : <b>Secret</b> xor H(password) = <b>Priv</b>
User -> Auth : <b>Username</b>, \n\
<b>nonce</b>, sign(<b>nonce</b>)

Auth -> Auth : verify sign(<b>nonce</b>)
Auth -> User : <b>WT</b>

User -> Pwd : store encrypted (<b>WT</b>)
====

@enduml