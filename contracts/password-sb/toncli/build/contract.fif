"Asm.fif" include
// automatically generated from `C:\Users\vomik\AppData\Local\toncli\toncli\func-libs\stdlib-tests.func` `C:\Users\vomik\IdeaProjects\ton-auth\contracts\password-sb\toncli\func\PasswordSB.fc` 
PROGRAM{
  DECLPROC getState
  DECLPROC setState
  DECLPROC verifyRequest
  DECLPROC recv_internal
  DECLPROC recv_external
  88250 DECLMETHOD getPublicKey
  101295 DECLMETHOD getMaskedPrivateKey
  85143 DECLMETHOD seqno
  96565 DECLMETHOD get2FactorNonce
  getState PROCREF:<{
    // 
    c4 PUSH	//  _1
    CTOS	//  storage
    256 LDU	//  _3 storage
    256 LDU	//  _3 _6 storage
    256 LDU	//  _3 _6 _9 storage
    32 LDU	//  _3 _6 _9 _12 storage
    32 LDU	//  _3 _6 _9 _12 _27 _26
    DROP	//  _3 _6 _9 _12 _15
  }>
  setState PROC:<{
    //  publicKey maskedPrivateKey ownerPublicKey seqno nonce
    s0 s4 XCHG
    NEWC	//  nonce maskedPrivateKey ownerPublicKey seqno publicKey _5
    256 STU	//  nonce maskedPrivateKey ownerPublicKey seqno _7
    s1 s3 XCHG	//  nonce seqno ownerPublicKey maskedPrivateKey _7
    256 STU	//  nonce seqno ownerPublicKey _9
    256 STU	//  nonce seqno _11
    32 STU	//  nonce _13
    32 STU	//  _15
    ENDC	//  _16
    c4 POP
  }>
  verifyRequest PROC:<{
    //  msg seqno ownerPublicKey
    s0 s2 XCHG
    9 PUSHPOW2	//  ownerPublicKey seqno msg _5=512
    LDSLICEX	//  ownerPublicKey seqno signature msg
    DUP	//  ownerPublicKey seqno signature msg request
    32 LDU	//  ownerPublicKey seqno signature msg messageSeqno request
    32 LDU	//  ownerPublicKey seqno signature msg messageSeqno validUntill request
    s2 s5 XCHG2	//  ownerPublicKey request signature msg validUntill messageSeqno seqno
    NEQ	//  ownerPublicKey request signature msg validUntill _17
    33 THROWIF
    NOW	//  ownerPublicKey request signature msg validUntill _20
    LEQ	//  ownerPublicKey request signature msg _21
    34 THROWIF
    HASHSU	//  ownerPublicKey request signature _24
    s0 s1 s3 XCHG3	//  request _24 signature ownerPublicKey
    CHKSIGNU	//  request _25
    35 THROWIFNOT
  }>
  recv_internal PROC:<{
    //  msg
    DROP	// 
  }>
  recv_external PROC:<{
    //  msg
    getState INLINECALLDICT	//  msg publicKey maskedPrivateKey ownerPublicKey seqno nonce
    s5 s1 s2 XCPU2	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno msg seqno ownerPublicKey
    verifyRequest CALLDICT	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno request
    ACCEPT
    1 LDU	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno isChangePasswordOperation request
    SWAP	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno request isChangePasswordOperation
    IF:<{	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno request
      256 LDU	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno _37 _36
      NIP	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno request
      256 LDU	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno _39 _38
      NIP	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno request
    }>ELSE<{	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno request
      s5 POP	//  request publicKey maskedPrivateKey ownerPublicKey seqno
      s0 s4 XCHG	//  seqno publicKey maskedPrivateKey ownerPublicKey request
      32 LDU	//  seqno publicKey maskedPrivateKey ownerPublicKey nonce request
      s1 s5 XCHG	//  nonce publicKey maskedPrivateKey ownerPublicKey seqno request
    }>
    ENDS
    INC	//  nonce publicKey maskedPrivateKey ownerPublicKey _27
    4 ROLL	//  publicKey maskedPrivateKey ownerPublicKey _27 nonce
    setState INLINECALLDICT
  }>
  getPublicKey PROC:<{
    // 
    getState INLINECALLDICT	//  _6 _7 _8 _9 _10
    4 BLKDROP	//  publicKey
  }>
  getMaskedPrivateKey PROC:<{
    // 
    getState INLINECALLDICT	//  _6 _7 _8 _9 _10
    s3 s4 XCHG
    4 BLKDROP	//  maskedPrivateKey
  }>
  seqno PROC:<{
    // 
    getState INLINECALLDICT	//  _6 _7 _8 _9 _10
    s1 s4 XCHG
    4 BLKDROP	//  seqno
  }>
  get2FactorNonce PROC:<{
    // 
    getState INLINECALLDICT	//  _6 _7 _8 _9 _10
    4 1 BLKDROP2	//  nonce
  }>
}END>c
